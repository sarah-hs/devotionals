{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Devotional","data","className","title","date","vers","content","map","p","i","Menu","id","class","type","value","name","onClick","document","getElementsByClassName","style","background","color","checked","for","App","useState","undefined","devotional","setDevotional","isLoaded","setIsLoaded","error","setError","useEffect","axios","get","then","catch","err","finally","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"gPAuCA,SAASA,EAAT,GAA6B,IAARC,EAAO,EAAPA,KACjB,OACI,sBAAKC,UAAU,aAAf,UACI,oBAAIA,UAAU,QAAd,SAAuBD,EAAKE,QAC5B,mBAAGD,UAAU,OAAb,SAAqBD,EAAKG,OAC1B,mBAAGF,UAAU,OAAb,SAAqBD,EAAKI,OAC1B,qBAAKH,UAAU,UAAf,SACKD,EAAKK,QAAQC,KAAI,SAACC,EAAGC,GAAJ,OAAU,4BAAYD,GAAJC,WAQpD,SAASC,IAWL,OACI,qBAAKC,GAAG,YAAR,SACI,qBAAIC,MAAM,oBAAV,UACI,qBAAIA,MAAM,0BAAV,UACJ,uBAAOA,MAAM,2BAA2BC,KAAK,QAAQC,MAAM,IAAIC,KAAK,SAASJ,GAAG,WAAWK,QAdnF,WACZC,SAASC,uBAAuB,cAAc,GAAGC,MAAMC,WAAa,QACpEH,SAASC,uBAAuB,cAAc,GAAGC,MAAME,MAAQ,SAYkDC,SAAO,IAC5G,uBAAOV,MAAM,2BAA2BW,IAAI,WAA5C,sBAEJ,qBAAIX,MAAM,0BAAV,UACJ,uBAAOA,MAAM,2BAA2BC,KAAK,QAAQC,MAAM,IAAIC,KAAK,SAASJ,GAAG,WAAWK,QAbnF,WACZC,SAASC,uBAAuB,cAAc,GAAGC,MAAMC,WAAa,QACpEH,SAASC,uBAAuB,cAAc,GAAGC,MAAME,MAAQ,WAYnD,uBAAOT,MAAM,2BAA2BW,IAAI,WAA5C,0BAOLC,MA7Ef,WAAgB,IAAD,EACyBC,wBAASC,GADlC,mBACJC,EADI,KACQC,EADR,OAEqBH,oBAAS,GAF9B,mBAEJI,EAFI,KAEMC,EAFN,OAGeL,wBAASC,GAHxB,mBAGJK,EAHI,KAGGC,EAHH,KAaX,OARAC,qBAAU,WACNC,IAAMC,IAAI,kEACTC,MAAK,gBAAEnC,EAAF,EAAEA,KAAF,OAAY2B,EAAc3B,EAAK,OACpCoC,OAAM,SAACC,GAAD,OAASN,EAASM,MACxBC,SAAQ,kBAAMT,GAAY,QAC5B,IAGAC,EAEK,sBAAK7B,UAAU,MAAf,UACI,kDACA,wCAAW6B,EAAMS,cAGpBX,EAQD,sBAAK3B,UAAU,MAAf,UACI,cAACQ,EAAD,IACA,cAACV,EAAD,CAAYC,KAAM0B,OARtB,qBAAKzB,UAAU,MAAf,SACI,oBAAIA,UAAU,UAAd,2BCfDuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlC,SAASmC,eAAe,SAM1BX,M","file":"static/js/main.bdeaf8bc.chunk.js","sourcesContent":["import './App.css';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n    const [devotional, setDevotional] = useState(undefined);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [error, setError] = useState(undefined);\n    \n    useEffect(() => {\n        axios.get('https://devotionals-api.herokuapp.com/api/v1/devotionals/today')\n        .then(({data}) => setDevotional(data[0]))\n        .catch((err) => setError(err))\n        .finally(() => setIsLoaded(true));\n    }, []);\n        \n\n    if(error)\n        return (\n            <div className=\"App\">\n                <h1>An error ocurred</h1>\n                <p>Error: {error.message}</p>\n            </div>\n        );\n    else if(!isLoaded)\n        return (\n            <div className=\"App\">\n                <h1 className=\"loading\">Loading...</h1>\n            </div>\n        );\n    else\n        return (\n            <div className=\"App\">\n                <Menu />\n                <Devotional data={devotional} />\n            </div>\n        );\n}\n\nfunction Devotional({data}) {\n    return (\n        <div className=\"devotional\">\n            <h1 className=\"title\">{data.title}</h1>\n            <p className=\"date\">{data.date}</p>\n            <p className=\"vers\">{data.vers}</p>\n            <div className=\"content\">\n                {data.content.map((p, i) => <p key={i}>{p}</p>)}\n            </div>\n        </div>\n    )\n}\n\n            \n\nfunction Menu() {\n    const option1 = () => {\n        document.getElementsByClassName(\"devotional\")[0].style.background = \"white\";\n        document.getElementsByClassName(\"devotional\")[0].style.color = \"black\";\n    }\n        \n    const option2 = () => {\n        document.getElementsByClassName(\"devotional\")[0].style.background = 'black';\n        document.getElementsByClassName(\"devotional\")[0].style.color = \"white\";\n    }\n        \n    return (\n        <div id=\"container\">\n            <ul class=\"segmented-control\">\n                <li class=\"segmented-control__item\">\n            <input class=\"segmented-control__input\" type=\"radio\" value=\"1\" name=\"option\" id=\"option-1\" onClick={option1} checked></input>\n                    <label class=\"segmented-control__label\" for=\"option-1\">Light</label>\n                </li>\n                <li class=\"segmented-control__item\">\n            <input class=\"segmented-control__input\" type=\"radio\" value=\"2\" name=\"option\" id=\"option-2\" onClick={option2}></input>\n                    <label class=\"segmented-control__label\" for=\"option-2\">Dark</label>\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}